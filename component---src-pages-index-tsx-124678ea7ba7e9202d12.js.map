{"version":3,"file":"component---src-pages-index-tsx-124678ea7ba7e9202d12.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/components/postGrid/card/centeredImg.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/card/card.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/card/index.ts","webpack://gatsby-starter-apple/./src/components/postGrid/useInfiniteScroll.ts","webpack://gatsby-starter-apple/./src/components/postGrid/postGrid.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/index.ts","webpack://gatsby-starter-apple/./src/components/indexText.tsx","webpack://gatsby-starter-apple/./src/components/orgList.tsx","webpack://gatsby-starter-apple/./src/pages/index.tsx","webpack://gatsby-starter-apple/./src/styles/category.ts"],"sourcesContent":["import React, { useMemo } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport type { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport type { Query } from \"Types/GraphQL\"\nimport type Post from \"Types/Post\"\n\ninterface CenteredImgProps extends Pick<Post, \"alt\"> {\n  src: Post[\"thumbnail\"]\n}\n\nconst DEFAULT_ALT = \"Thumbnail Image\"\n\nconst CenteredImg: React.FC<CenteredImgProps> = ({ src, alt }) => {\n  const data = useStaticQuery<Query>(graphql`\n    query {\n      allImageSharp {\n        edges {\n          node {\n            id\n            gatsbyImageData(\n              layout: CONSTRAINED\n              aspectRatio: 1.77\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n  `)\n\n  const image = useMemo(() => {\n    const imageSharp = data.allImageSharp.edges.find(\n      edge => edge.node.id === src\n    )\n    return imageSharp?.node.gatsbyImageData as IGatsbyImageData\n  }, [src, data.allImageSharp.edges])\n\n  return (\n    <ThumbnailWrapper>\n      <InnerWrapper>\n        <GatsbyImage image={image} loading=\"eager\" alt={alt ?? DEFAULT_ALT} />\n      </InnerWrapper>\n    </ThumbnailWrapper>\n  )\n}\n\nexport const ThumbnailWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: var(--color-dimmed);\n    transition: 0.3s ease;\n  }\n`\n\nconst InnerWrapper = styled.div`\n  overflow: hidden;\n`\n\nexport default React.memo(CenteredImg)\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport type Post from \"Types/Post\"\nimport Category from \"Styles/category\"\nimport DateTime from \"Styles/dateTime\"\nimport CenteredImg from \"./centeredImg\"\n\ntype CardProps = Pick<\n  Post,\n  \"thumbnail\" | \"alt\" | \"category\" | \"title\" | \"desc\" | \"date\" | \"link\"\n>\n\nconst Card: React.FC<CardProps> = ({\n  thumbnail,\n  alt,\n  category,\n  title,\n  desc,\n  date,\n  link,\n}) => {\n  return (\n    <Wrapper>\n      <CenteredImg src={thumbnail} alt={alt} />\n      <Text>\n        <div>\n          <Category>{category}</Category>\n          <Title>{title}</Title>\n          <Desc>{desc}</Desc>\n        </div>\n      </Text>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  height: 100%;\n  border-radius: var(--border-radius-base);\n  background-color: var(--color-card);\n\n  /* Fix Safari overflow:hidden with border radius not working error */\n  transform: translateZ(0);\n`\n\nconst Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  justify-content: space-between;\n  padding: var(--sizing-md);\n\n  & > * {\n    display: block;\n  }\n`\n\nconst Title = styled.h3`\n  margin-top: var(--sizing-xs);\n  font-size: var(--text-lg);\n  font-weight: var(--font-weight-bold);\n  line-height: 1.3;\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    font-size: 1.3125rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    font-size: var(--text-md);\n  }\n`\n\nconst Desc = styled.p`\n  line-height: 1.5;\n  margin-top: 8px;\n  padding-bottom: var(--sizing-sm);\n  color: var(--color-text-2);\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default React.memo(Card)\n","import Card from \"./card\"\n\nexport default Card\n","import { useState, useEffect, useLayoutEffect, useRef } from \"react\"\n\nimport type Post from \"Types/Post\"\n\ninterface UseInfiniteScrollProps {\n  posts: Post[]\n  scrollEdgeRef: React.RefObject<HTMLDivElement>\n  maxPostNum: number\n  offsetY: number\n}\n\nconst useInfiniteScroll = ({\n  posts,\n  scrollEdgeRef,\n  maxPostNum = 10,\n  offsetY = 400,\n}: UseInfiniteScrollProps) => {\n  const [hasMore, setHasMore] = useState(false)\n  const [currentList, setCurrentList] = useState<Post[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [observerLoading, setObserverLoading] = useState(false)\n\n  const observer = useRef<IntersectionObserver>()\n\n  useLayoutEffect(() => {\n    if (!posts.length || isLoading) return\n    setHasMore(posts.length > maxPostNum)\n    setCurrentList([...posts.slice(0, maxPostNum)])\n    setIsLoading(true)\n  }, [isLoading, posts, maxPostNum])\n\n  useEffect(() => {\n    const loadEdges = () => {\n      const currentLength = currentList.length\n      const more = currentLength < posts.length\n      const nextEdges = more\n        ? posts.slice(currentLength, currentLength + maxPostNum)\n        : []\n      setHasMore(more)\n      setCurrentList([...currentList, ...nextEdges])\n    }\n\n    const scrollEdgeElem = scrollEdgeRef.current\n\n    const option = {\n      rootMargin: `0px 0px ${offsetY}px 0px`,\n      threshold: [0],\n    }\n\n    observer.current = new IntersectionObserver(entries => {\n      if (!hasMore) return\n      entries.forEach(entry => {\n        if (!observerLoading) {\n          setObserverLoading(true)\n          return\n        }\n        if (entry.isIntersecting) loadEdges()\n      })\n    }, option)\n\n    observer.current.observe(scrollEdgeElem!)\n\n    return () => observer.current && observer.current.disconnect()\n  })\n\n  return currentList\n}\n\nexport default useInfiniteScroll\n","import React, { useRef } from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport type Post from \"Types/Post\"\nimport Card from \"./card\"\nimport useInfiniteScroll from \"./useInfiniteScroll\"\nimport { ThumbnailWrapper } from \"./card/centeredImg\"\n\ninterface PostGridProps {\n  posts: Post[]\n}\n\nconst PostGrid: React.FC<PostGridProps> = ({ posts }) => {\n  const scrollEdgeRef = useRef<HTMLDivElement>(null)\n  const currentList = useInfiniteScroll({\n    posts,\n    scrollEdgeRef,\n    maxPostNum: 10,\n    offsetY: 200,\n  })\n\n  return (\n    <Grid role=\"list\">\n      {currentList.map(data => {\n        const { id, slug, title, desc, date, category, thumbnail, alt, link } = data\n        const ariaLabel = `${title} - ${category} - Posted on ${date}`\n        return (\n          <List key={id} role=\"listitem\">\n            <a href={link ?? \"\"} target=\"_blank\" >\n              <Card\n                thumbnail={thumbnail}\n                alt={alt}\n                category={category}\n                title={title}\n                desc={desc}\n                date={date}\n                link={link}\n              />\n            </a>\n          </List>\n        )\n      })}\n      <div ref={scrollEdgeRef} />\n    </Grid>\n  )\n}\n\nconst Grid = styled.ul`\n  display: grid;\n  grid-gap: var(--grid-gap-xl);\n  grid-template-columns: repeat(2, 1fr);\n  list-style: none;\n\n  & > li {\n    margin: 0 auto;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-gap: var(--grid-gap-lg);\n  }\n`\n\nconst List = styled.li`\n  box-sizing: border-box;\n  grid-column: span 1;\n\n  a {\n    display: block;\n    height: 100%;\n  }\n\n  a:hover ${ThumbnailWrapper}::after, a:focus ${ThumbnailWrapper}::after {\n    opacity: 1;\n  }\n\n  & .gatsby-image-wrapper {\n    transition: opacity 1s ease-out, transform 0.5s ease;\n  }\n\n  a:hover,\n  a:focus {\n    .gatsby-image-wrapper {\n      transform: scale(1.03);\n    }\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-column: span 2;\n  }\n`\n\nexport default PostGrid\n","import PostGrid from \"./postGrid\"\n\nexport default PostGrid\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport type { Query } from \"Types/GraphQL\"\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport Markdown from \"Styles/markdown\"\nimport { rhythm } from \"Styles/typography\"\n\nconst IndexText = () => {\n  const data = useStaticQuery<Query>(graphql`\n    query {\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/index/\" } }) {\n        edges {\n          node {\n            html\n          }\n        }\n      }\n    }\n  `)\n\n  const markdown = data.allMarkdownRemark.edges[0].node.html\n\n  return (\n    <Container\n      dangerouslySetInnerHTML={{ __html: markdown ?? \"\" }}\n      rhythm={rhythm}\n    ></Container>\n  )\n}\n\nconst Container = styled(Markdown).attrs({\n  as: \"main\",\n})`\n  margin-top: 20px;\n  margin-bottom: 4rem;\n  font-weight: 600;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-xl);\n  }\n\n  h1 {\n    margin-bottom: 2rem;\n  }\n\n  h2 {\n    margin-top: var(--sizing-lg);\n\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\n      font-size: 1.75rem;\n    }\n  }\n\n  h3 {\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\n      font-size: 1.25rem;\n    }\n  }\n`\n\nexport default IndexText\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\n\nexport default () => (\n  <Container>\n    <SupportTitle>Support In Solidarity</SupportTitle>\n    <Grid role=\"list\">\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/38.png\" />\n      </List>\n      <List role=\"listitem\">\n      <StaticImage src=\"../images/AS.png\" />\n      </List>\n      <List role=\"listitem\">\n      <StaticImage src=\"../images/ADK.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/AHANG.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/AMANDLA.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/AUFSTEHN.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/DECLIC.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/CAMPACT.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/CAMPAX.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/DGZ.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/GU.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/KP.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/JHATKAA.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/LM.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/LEADNOW.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/SKIFTET.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/UPLIFT.png\" />\n      </List>\n      <List role=\"listitem\">\n        <StaticImage src=\"../images/ZAZIM.png\" />\n      </List>\n    </Grid>\n  </Container>\n)\n\nconst Container = styled.ul`\n  margin: 2rem 0;\n`\n\nconst Grid = styled.ul`\n  display: grid;\n  grid-gap: var(--grid-gap-xl);\n  grid-template-columns: repeat(6, 1fr);\n  list-style: none;\n\n  & > li {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-gap: var(--grid-gap-lg);\n  }\n`\n\nconst List = styled.li`\n  box-sizing: border-box;\n  grid-column: span 1;\n\n  a {\n    display: block;\n    height: 100%;\n  }\n\n  & .gatsby-image-wrapper {\n    transition: opacity 1s ease-out, transform 0.5s ease;\n    & img {\n      max-height: 100px;\n    }\n  }\n\n  a:hover,\n  a:focus {\n    .gatsby-image-wrapper {\n      transform: scale(1.03);\n    }\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-column: span 2;\n  }\n`\n\nconst SupportTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: var(--font-weight-extra-bold);\n  margin-bottom: var(--sizing-lg);\n  line-height: 1.21875;\n  color: #FED001;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    font-size: 1.75rem;\n  }\n`","import React, { useState, useLayoutEffect } from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport type { Query, MarkdownRemarkFrontmatter } from \"Types/GraphQL\"\nimport type Post from \"Types/Post\"\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport PostGrid from \"Components/postGrid\"\nimport CategoryFilter from \"Components/catetgoryFilter\"\nimport IndexText from \"Components/indexText\"\nimport OrgList from \"Components/orgList\"\n\nconst Home = ({\n  pageContext,\n  data,\n}: PageProps<Query, MarkdownRemarkFrontmatter>) => {\n  const [posts, setPosts] = useState<Post[]>([])\n  const currentCategory = pageContext.category\n  const postData = data.allMarkdownRemark.edges\n\n  useLayoutEffect(() => {\n    const filteredPostData = currentCategory\n      ? postData.filter(\n          ({ node }) => node?.frontmatter?.category === currentCategory\n        )\n      : postData\n\n    filteredPostData.forEach(({ node }) => {\n      const { id } = node\n      const { slug } = node?.fields!\n      const { title, desc, date, category, thumbnail, alt, link } = node?.frontmatter!\n      const { childImageSharp } = thumbnail!\n\n      setPosts(prevPost => [\n        ...prevPost,\n        {\n          id,\n          slug,\n          title,\n          desc,\n          date,\n          category,\n          thumbnail: childImageSharp?.id,\n          alt,\n          link,\n        },\n      ])\n    })\n  }, [currentCategory, postData])\n\n  const site = useSiteMetadata()\n  const postTitle = currentCategory || site.postTitle\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Main>\n        <Content>\n          <Title>In the face of acts of aggression against civilians, <br/>\n          we express our solidarity with our neighbours and friends, Ukrainians.</Title>\n          <Grid role=\"list\">\n            <List role=\"listitem\">\n              <ThumbnailWrapper>\n                <StaticImage src=\"../images/dove.png\" width={300} marginLeft={30} />\n              </ThumbnailWrapper>\n            </List>\n            <List role=\"listitem\">\n              <TextContent>\n                The cost of war is always the highest for everyday people. The true scale of the humanitarian effort needed - both for the refugees seeking safety in Romania, Poland, and Hungary and for the people still in Ukraine - will be huge.\n                <br/><br/>\n                People need food, warmth, water and safe places to stay and probably for months. They might also need legal support or health care.\n                <br/><br/>\n                As we write this already over 500,000 Ukrainians have fled the country and as long as Putin is advancing into Ukraine, this will drive up the number of people needing help.\n              </TextContent>\n            </List>\n          </Grid>\n          <IndexText/>\n          <HashtagContainer>\n            <StaticImage src=\"../images/hashtag.png\" />\n          </HashtagContainer>\n          <PostTitle>Aid Organisations</PostTitle>\n          <PostGrid posts={posts} />\n          <OrgList/>\n        </Content>\n      </Main>\n    </Layout>\n  )\n}\n\nconst Main = styled.main`\n  min-width: var(--min-width);\n  min-height: calc(100vh - var(--nav-height) - var(--footer-height));\n  background-color: var(--color-background);\n`\n\nconst Content = styled.div`\n  box-sizing: content-box;\n  width: 87.5%;\n  max-width: var(--width);\n  padding-top: var(--sizing-lg);\n  padding-bottom: var(--sizing-lg);\n  margin: 0 auto;\n  font-weight: 600;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    padding-top: var(--grid-gap-lg);\n    width: 87.5%;\n  }\n`\n\nconst PostTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: var(--font-weight-extra-bold);\n  margin-bottom: var(--sizing-md);\n  line-height: 1.21875;\n  color: #FED001;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    font-size: 1.75rem;\n  }\n`\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(posts/blog)/\" } }\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            category\n            date(formatString: \"YYYY-MM-DD\")\n            desc\n            thumbnail {\n              childImageSharp {\n                id\n              }\n              base\n            }\n            alt\n            link\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Title = styled.h3`\n  margin-top: var(--sizing-xs);\n  margin-bottom: var(--sizing-lg);\n  font-size: var(--text-lg);\n  font-weight: var(--font-weight-bold);\n  line-height: 1.3;\n  text-align: center;\n  font-size: 30px;\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    font-size: 1.3125rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    font-size: var(--text-md);\n  }\n`\n\nconst Grid = styled.ul`\n  display: grid;\n  grid-gap: var(--grid-gap-xl);\n  grid-template-columns: repeat(2, 1fr);\n  list-style: none;\n  margin-top: 20px;\n\n  & > li {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-gap: var(--grid-gap-lg);\n  }\n`\n\nconst List = styled.li`\n  box-sizing: border-box;\n  grid-column: span 1;\n  display: flex;\n  justify-content: center;\n\n  a {\n    display: block;\n    height: 100%;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-column: span 2;\n  }\n`\n\nconst TextContent = styled.p`\n  line-height: 1.68;\n  text-align: left;\n  font-size: 1.0625rem;\n`\n\nexport const ThumbnailWrapper = styled.div`\n  display: flex;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: var(--color-dimmed);\n    transition: 0.3s ease;\n  }\n`\n\nexport const HashtagContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 4rem;\n`\n\nexport default Home\n","import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n"],"names":["CenteredImg","src","alt","data","useStaticQuery","image","useMemo","imageSharp","allImageSharp","edges","find","edge","node","id","gatsbyImageData","ThumbnailWrapper","InnerWrapper","G","loading","styled","React","Card","thumbnail","category","title","desc","date","link","Wrapper","Text","Title","Desc","theme","device","md","sm","posts","scrollEdgeRef","maxPostNum","offsetY","useState","hasMore","setHasMore","currentList","setCurrentList","isLoading","setIsLoading","observerLoading","setObserverLoading","observer","useRef","useLayoutEffect","length","slice","useEffect","scrollEdgeElem","current","option","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","currentLength","more","nextEdges","isIntersecting","observe","disconnect","Grid","List","useInfiniteScroll","role","map","slug","key","href","target","ref","Container","Markdown","attrs","as","markdown","allMarkdownRemark","html","dangerouslySetInnerHTML","__html","rhythm","SupportTitle","S","Main","Content","PostTitle","TextContent","HashtagContainer","pageContext","setPosts","currentCategory","postData","filter","frontmatter","fields","childImageSharp","prevPost","site","useSiteMetadata","postTitle","width","marginLeft","Category"],"sourceRoot":""}